{"name":"Ultron","tagline":"Ruby bindings for the Marvel Comics API","body":"[![Build Status](http://img.shields.io/travis/pikesley/ultron.svg)](https://travis-ci.org/pikesley/ultron)\r\n[![Dependency Status](http://img.shields.io/gemnasium/pikesley/ultron.svg)](https://gemnasium.com/pikesley/ultron)\r\n[![Coverage Status](http://img.shields.io/coveralls/pikesley/ultron.svg)](https://coveralls.io/r/pikesley/ultron)\r\n[![Code Climate](http://img.shields.io/codeclimate/github/pikesley/ultron.svg)](https://codeclimate.com/github/pikesley/ultron)\r\n[![Gem Version](http://img.shields.io/gem/v/ultron.svg)](https://rubygems.org/gems/ultron)\r\n[![License](http://img.shields.io/:license-mit-blue.svg)](http://pikesley.mit-license.org)\r\n[![Badges](http://img.shields.io/:badges-7/7-ff6799.svg)](https://github.com/pikesley/badger)\r\n\r\n# Ultron\r\n\r\nRuby bindings for the [Marvel Comics API](http://developer.marvel.com/)\r\n\r\n    git clone https://github.com/pikesley/ultron\r\n    ultron\r\n    bundle\r\n    rake\r\n    \r\nOr just\r\n\r\n    gem install ultron\r\n\r\nTo actually use it you need an API keypair which you can get from [here](https://developer.marvel.com/signup), put them into `.env` like this\r\n\r\n    PUBLIC_KEY: this_r_public_key\r\n    PRIVATE_KEY: this_one_r_private_key\r\n\r\nI've made a [little toy app](https://github.com/pikesley/powerman) which uses this gem to explore the data.\r\n\r\n## API\r\n\r\nI've tried to follow the [Marvel API](http://developer.marvel.com/docs#!/public/) as closely as possible. It's probably best illustrated with some examples from the [specs](https://github.com/pikesley/ultron/tree/master/spec/ultron):\r\n\r\n### Get a thing by its ID\r\n\r\n    it 'should find a comic', :vcr do\r\n      comic = Comics.find 12518\r\n      comic.title.should == 'Uncanny X-Men (1963) #67'\r\n    end\r\n    \r\n### Get a set of things filtered by some other thing\r\n\r\n    it 'should find a list of comics featuring the character', :vcr do\r\n      character = Characters.find 1009610\r\n      character.name.should == 'Spider-Man'\r\n      comics = Comics.by_character 1009610\r\n      comics.first.title.should == 'Superior Spider-Man (2013) #22'\r\n      comics.class.should == Comics\r\n      comics.count.should == 20\r\n    end\r\n    \r\n### Get a set of things using query-string parameters\r\n\r\n    it 'should let us search with parameters', :vcr do\r\n      comics = Comics.where sharedAppearances: '1009351,1009718' # Hulk and Wolverine\r\n      comics[7].title.should == 'Deadpool (2008) #37'\r\n    end\r\n    \r\n### Get a set of things using multiple query-string parameters\r\n\r\n    it 'should let us search with multiple parameters', :vcr do\r\n      comics = Comics.where sharedAppearances: '1009610,1009718', events: 302 # Spider-Man and Wolverine, Fear Itself\r\n      comics.first.title.should == 'Fear Itself (2010) #7'\r\n    end\r\n\r\n### Get a set of things filtered by another thing and with a query-string\r\n\r\n    it 'should let us get comics by a creator *with params*', :vcr do\r\n      comics = Comics.by_creator_and_with 214, dateRange: '1980-01-01,1989-12-31'\r\n      comics.first.resourceURI.should == 'http://gateway.marvel.com/v1/public/comics/8268'\r\n    end\r\n    \r\n### Get a random thing\r\n\r\nSomething like this works, but it's proving very difficult to test it:\r\n\r\n    Characters.sample\r\n    \r\n### Get a random thing from a search\r\n\r\n      it 'should give us a random comic', :vcr do\r\n        set = Comics.by_character 1009610\r\n        set.stub(:random_offset).and_return(512)\r\n        set.sample.title.should == 'Amazing Spider-Man (1999) #590'\r\n      end\r\n\r\n      it 'should give us a random comic for a more complex search', :vcr do\r\n        set = Comics.by_creator_and_with 214, dateRange: '1980-01-01,1989-12-31'\r\n        set.stub(:random_offset).and_return(99)\r\n        set.sample.title.should == 'Dazzler (1981) #19'\r\n      end\r\n      \r\n### Pre-baked custom searches\r\n\r\nThere's a lot of noise in the data, and I found myself applying the same filters again and again. So:\r\n\r\n    it 'should give us regular comics filtered by character', :vcr do\r\n      comics = Comics.by_character_and_vanilla_comics 1009685\r\n      comics.first.title.should == 'AGE OF ULTRON (2013) #1'\r\n    end\r\n    \r\nThis applies the following search params:\r\n\r\n    format: 'comic', formatType: 'comic', noVariants: true\r\n    \r\nwhich purges all sorts of hardbacks and reprints and so on from the results.\r\n    \r\n## Exceptions\r\n\r\n### Catch and re-raise a 404\r\n\r\n    it 'should throw a 404 (wrapped in a Marvel exception) on a 404', :vcr do\r\n      begin\r\n        comic = Comics.find 1000000 # there are not a million comics\r\n      rescue MarvelException => e\r\n        e.code.should == 404\r\n        e.status.should == \"We couldn't find that comic_issue\"\r\n      end\r\n    end\r\n    \r\n### Raise a custom exception when we do something dumb\r\n\r\n    it 'should throw a Resource Not Found exception when we search for something nonsensical', :vcr do\r\n      begin\r\n        characters = Characters.by_creator 186 # characters by creator is a nonsense concept in the Marvel API\r\n      rescue UltronException => e\r\n        e.status.should == 'Resource does not exist. Check http://developer.marvel.com/docs'\r\n      end\r\n    end\r\n    \r\nThis all got a lot more elegant after a chat over a fry-up with @floppy at the always-superb [First-Step Cafe](https://plus.google.com/100027883675109761806/about?gl=uk&hl=en) in Shoreditch.","google":"UA-48119854-1","note":"Don't delete this file! It's used internally to help with page regeneration."}